cache:
  key: '$CI_BUILD_REF_NAME node:10-alpine'
  paths:
    - node_modules/

stages:
  - test-lint
  - build
  - deploy

eslint-test:
  stage: test-lint
  image: node:8
  except:
    - master
    - staging
  before_script:
    - rm -rf /tmp/*
    - npm i --no-cache
  script:
    - npm run lint

docker-build:
  stage: build
  image: docker:latest
  only:
    - staging
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  before_script:
    - docker version
    - docker info
    - 'docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY'
  script:
    - 'docker build -t ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_SHORT_SHA} --pull . --force-rm'
    - 'docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_SHORT_SHA}'
  after_script:
    - 'docker logout ${CI_REGISTRY}'

docker-deploy:
  stage: deploy
  image: gitlab/dind:latest
  only:
    - staging
  environment: development
  variables:
    DOCKER_CONTAINER: $$(docker ps --filter "name=ctv-web" -aq)
  services:
    - docker:dind
  before_script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H $DEPLOYMENT_SERVER_IP >> ~/.ssh/known_hosts
  script:
    - >
      ssh $DEPLOYMENT_SERVER_USER@$DEPLOYMENT_SERVER_IP "docker stop $DOCKER_CONTAINER;
      docker rm $DOCKER_CONTAINER;
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY;
      docker pull $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_SHORT_SHA;
      docker tag $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE:latest;
      docker run -d -tip 3000:80 --name ctv-web $CI_REGISTRY_IMAGE:latest; docker logout $CI_REGISTRY;"
